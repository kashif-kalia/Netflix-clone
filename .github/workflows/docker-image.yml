name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env: 
 SHORT_SHA: $(echo ${{github.SHA }} | cut -c 1-8)
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout the code
      uses: actions/checkout@v4
    # - name: SonarQube Scan
    #   uses: kitabisa/sonarqube-action@v1.2.0
    #   with:
    #     host: ${{ secrets.SONAR_HOST_URL }}
    #     login: ${{ secrets.SONAR_TOKEN }}
    - uses: sonarsource/sonarqube-scan-action@master
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        projectBaseDir: .
        args: >
         -Dsonar.projectKey=netflix 
          
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarqube-scan-action@master
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    #   with:
    #    projectBaseDir: .
    #    args: 
    #       -Dsonar.projectKey=netflix 
    #       -Dsonar.sources=.
    #       -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
    #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}
     
    - name: Login to Docker Hub
      #env:
       # DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        #DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
       docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
       #Secrets can either be used directly, or can be bound to a env-variable and then be used. Both approach work.
   
    - name: Build the Docker image
      run: |
        docker build --build-arg TMDB_V3_API_KEY=AJ7AYe14eca3e76864yah319b92 -t netflix .
        docker tag netflix kashifahmed/github-action-images:${{ github.SHA }} 
        
    - name: Push Docker image to DockerHub
      run: | 
        docker push kashifahmed/github-action-images:${{ github.SHA }} 

    - name: Create SARIF directory
      run: mkdir -p /home/runner/work/Netflix-clone/trivy-results.sarif
    
         
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: 'docker.io/kashifahmed/github-action-images:${{ github.SHA }} '
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'    
                              
    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #      sarif_file: 'trivy-results.sarif'      
